name: CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main, develop]
        types: [opened, synchronize]

concurrency:
    group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
    cancel-in-progress: true

env:
    NEXT_TELEMETRY_DISABLED: 1
    CI: true

jobs:
    ci:
        strategy:
            fail-fast: false
            matrix:
                platform: [macos-latest, ubuntu-latest, windows-latest]
        runs-on: ${{ matrix.platform }}
        steps:
            - name: Checkout [Pull Request]
              uses: actions/checkout@v4
              if: github.event_name == 'pull_request'
              with:
                  ref: ${{ github.event.pull_request.head.sha }}
                  fetch-depth: 0

            - name: Checkout [Main]
              uses: actions/checkout@v4
              if: github.event_name != 'pull_request'
              with:
                  fetch-depth: 0

            - name: Derive appropriate SHAs for base and head for `nx affected` commands
              uses: nrwl/nx-set-shas@v3

            - name: Install Node
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: Install pnpm
              uses: pnpm/action-setup@v3
              with:
                  version: 8
                  run_install: false

            - name: Get pnpm store directory
              shell: bash
              run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - name: pnpm cache
              uses: actions/cache@v3
              id: cache
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: ${{ runner.os }}-pnpm-store-

            - name: cargo cache
              uses: actions/cache@v3
              with:
                  path: ${{ github.workspace }}/dist
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: ${{ runner.os }}-cargo-

            - name: Install dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: pnpm install

            - name: Install Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: nightly-2024-02-05
                  override: true
                  components: rustfmt, clippy, llvm-tools

            - name: Install Tauri Dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libwebkit2gtk-4.1-dev build-essential curl wget file libssl-dev libayatana-appindicator3-dev librsvg2-dev

            - name: Format
              run: pnpm fmt:check

            - name: Lint
              run: pnpm lint:affected --base=$NX_BASE --head=$NX_HEAD

            - name: Build
              run: pnpm build:affected --base=$NX_BASE --head=$NX_HEAD

            - name: Test
              run: pnpm test:affected --base=$NX_BASE --head=$NX_HEAD

            - name: E2E
              run: pnpm nx e2e e2e

    cleanup:
        name: Cleanup
        runs-on: ubuntu-latest
        needs: [ci]
        steps:
            - name: Delete Artifacts
              uses: geekyeggo/delete-artifact@v2
              with:
                  name: "*"
